) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date)) %>%
filter(Requisition_Created_On == max(Requisition_Created_On)))$Application_Id
)
}
}
source("Auxiliary/requirements.R")
source("Auxiliary/functions.R")
jobvite_data <- read_csv(tk_choose.files(caption = "Select Jobvite Data in CSV format"))
nuview_data <- read_csv(tk_choose.files(caption = "Select NuView Data in CSV format"))
jobvite_data <- clean_jobvite(jobvite_data)
collapsed_nuview <- group_nuview(nuview_data, min(jobvite_data$Candidate_Hire_Date))
collapsed_nuview$jobvite_id <- NA
for(i in 1:nrow(collapsed_nuview)){
#If after checks, length is zero, there were no matching records.
if(nrow(jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)!= 0){
if(collapsed_nuview[i,]$FirstName == "Sara" & collapsed_nuview[i,]$LastName == "Barker"){
print(i)
print(
jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)
}
#If matches are found append application ID.
collapsed_nuview[i,]$jobvite_id <-
as.integer((jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date)) %>%
filter(Requisition_Created_On == max(Requisition_Created_On)))$Application_Id
)
}
}
collapsed_nuview$jobvite_id <- NA
#iter <- 0
############
for(i in 1:nrow(collapsed_nuview)){
#If after checks, length is zero, there were no matching records.
if(nrow(jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)!= 0){
if(i == 251){
print(i)
print(
jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)
}
#If matches are found append application ID.
collapsed_nuview[i,]$jobvite_id <-
as.integer((jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date)) %>%
filter(Requisition_Created_On == max(Requisition_Created_On)))$Application_Id
)
}
}
View(collapsed_nuview)
collapsed_nuview$jobvite_id <- NA
for(i in 1:nrow(collapsed_nuview)){
#If after checks, length is zero, there were no matching records.
if(nrow(jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)!= 0){
if(i == 251){
print(i)
print(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE))
print(grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE))
print(
jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)
}
#If matches are found append application ID.
collapsed_nuview[i,]$jobvite_id <-
as.integer((jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date)) %>%
filter(Requisition_Created_On == max(Requisition_Created_On)))$Application_Id
)
}
}
View(jobvite_data)
collapsed_nuview$jobvite_id <- NA
for(i in 1:nrow(collapsed_nuview)){
#If after checks, length is zero, there were no matching records.
if(nrow(jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)!= 0){
if(i == 251){
print(i)
print(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), "Mikheil Saralishvili", ignore.case = TRUE))
print(grepl(split_and_combine(collapsed_nuview[i,]$LastName), "Mikheil Saralishvili", ignore.case = TRUE))
print(
jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)
}
#If matches are found append application ID.
collapsed_nuview[i,]$jobvite_id <-
as.integer((jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date)) %>%
filter(Requisition_Created_On == max(Requisition_Created_On)))$Application_Id
)
}
}
grepl(split_and_combine(collapsed_nuview[251,]$LastName), "Mikheil Saralishvili", ignore.case = TRUE)
collapsed_nuview$jobvite_id <- NA
#iter <- 0
############
for(i in 250:nrow(collapsed_nuview)){
#If after checks, length is zero, there were no matching records.
if(nrow(jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)!= 0){
if(i == 251){
print(i)
print(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), "Mikheil Saralishvili", ignore.case = TRUE))
print(grepl(split_and_combine(collapsed_nuview[i,]$LastName), "Mikheil Saralishvili", ignore.case = TRUE))
print(
jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)
}
#If matches are found append application ID.
collapsed_nuview[i,]$jobvite_id <-
as.integer((jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date)) %>%
filter(Requisition_Created_On == max(Requisition_Created_On)))$Application_Id
)
}
}
collapsed_nuview$jobvite_id <- NA
for(i in 250:nrow(collapsed_nuview)){
#If after checks, length is zero, there were no matching records.
if(nrow(jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)!= 0){
if(i == 251){
print(i)
print(split_and_combine(collapsed_nuview[i,]$LastName))
print(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), "Mikheil Saralishvili", ignore.case = TRUE))
print(grepl(split_and_combine(collapsed_nuview[i,]$LastName), "Mikheil Saralishvili", ignore.case = TRUE))
print(
jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)
}
#If matches are found append application ID.
collapsed_nuview[i,]$jobvite_id <-
as.integer((jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date)) %>%
filter(Requisition_Created_On == max(Requisition_Created_On)))$Application_Id
)
}
}
View(collapsed_nuview)
source("Auxiliary/requirements.R")
source("Auxiliary/functions.R")
collapsed_nuview$jobvite_id <- NA
#iter <- 0
############
for(i in 1:nrow(collapsed_nuview)){
#If after checks, length is zero, there were no matching records.
if(nrow(jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date))
)!= 0){
#If matches are found append application ID.
collapsed_nuview[i,]$jobvite_id <-
as.integer((jobvite_data %>%
filter(grepl(split_and_combine(collapsed_nuview[i,]$FirstName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
grepl(split_and_combine(collapsed_nuview[i,]$LastName), gsub("[[:punct:]]+", "", Candidate_Full_Name), ignore.case = TRUE) == TRUE &
Candidate_Hire_Date <= collapsed_nuview[i,]$EmlEffDt
) %>%
###Get most recent job
filter(Candidate_Hire_Date == max(Candidate_Hire_Date)) %>%
filter(Requisition_Created_On == max(Requisition_Created_On)))$Application_Id
)
}
}
nuview_lj_jobvite <- nuview_data %>% left_join(collapsed_nuview %>% select(jobvite_id, Pos), by = "Pos")
crosscheck <- jobvite_data %>% left_join(nuview_lj_jobvite, by = c("Application_Id" = "jobvite_id"))
missing <- crosscheck %>% filter(is.na(Emp)) %>% select(Application_Id, Candidate_Full_Name, Candidate_Hire_Date, job_jobtype_name, EmlEffDt, Requisition_Country)
View(missing)
write_csv(nuview_lj_jobvite, "Output/nuview_lj_jobvite.csv")
min(jobvite_data$Candidate_Hire_Date)
source("Auxiliary/requirements.R")
source("Auxiliary/functions.R")
jobvite_data <- clean_jobvite(jobvite_data)
collapsed_nuview <- group_nuview(nuview_data, min(jobvite_data$Candidate_Hire_Date))
collapsed_nuview <- fill_nuview_collapsed(collapsed_nuview, jobvite_data)
nuview_lj_jobvite <- nuview_data %>% left_join(collapsed_nuview %>% select(jobvite_id, Pos), by = "Pos")
crosscheck <- jobvite_data %>% left_join(nuview_lj_jobvite, by = c("Application_Id" = "jobvite_id"))
missing <- crosscheck %>% filter(is.na(Emp)) %>% select(Application_Id, Candidate_Full_Name, Candidate_Hire_Date, job_jobtype_name, EmlEffDt, Requisition_Country)
nuview_lj_jobvite <- nuview_data %>%
left_join(collapsed_nuview %>%
select(jobvite_id, Pos), by = "Pos") %>%
filter(PosEffDt >= jobvite_data$Candidate_Hire_Date)
nuview_lj_jobvite <- nuview_data %>%
left_join(collapsed_nuview %>%
select(jobvite_id, Pos), by = "Pos") %>%
filter(as.Date(PosEffDt, format = '%m/%d/%Y') >= jobvite_data$Candidate_Hire_Date)
nuview_lj_jobvite <- nuview_data %>%
mutate(PosEffDt = as.Date(PosEffDt, format = '%m/%d/%Y')) %>%
left_join(collapsed_nuview %>%
select(jobvite_id, Pos), by = "Pos") %>%
filter(PosEffDt >= jobvite_data$Candidate_Hire_Date)
nuview_lj_jobvite <- nuview_data %>%
mutate(PosEffDt = as.Date(PosEffDt, format = '%m/%d/%Y')) %>%
left_join(collapsed_nuview %>%
select(jobvite_id, Pos), by = "Pos") %>%
filter(PosEffDt >= min(jobvite_data$Candidate_Hire_Date))
View(nuview_lj_jobvite)
crosscheck <- jobvite_data %>% left_join(nuview_lj_jobvite, by = c("Application_Id" = "jobvite_id"))
missing <- crosscheck %>% filter(is.na(Emp)) %>% select(Application_Id, Candidate_Full_Name, Candidate_Hire_Date, job_jobtype_name, EmlEffDt, Requisition_Country)
View(missing)
View(nuview_lj_jobvite)
min(jobvite_data$Candidate_Hire_Date)
runApp()
runApp()
nuview_not_jobvite <- nuview_lj_jobvite %>% filter(is.na(jobvite_id)) %>% unique(Emp)
nuview_not_jobvite <- nuview_lj_jobvite %>% filter(is.na(jobvite_id))
View(nuview_not_jobvite)
nuview_not_jobvite <- nuview_lj_jobvite %>% filter(is.na(jobvite_id)) %>% distinct(Emp)
View(nuview_not_jobvite)
nuview_not_jobvite <- nuview_lj_jobvite %>% filter(is.na(jobvite_id)) %>% distinct(Emp, .keep_all = TRUE)
View(nuview_not_jobvite)
nuview_not_jobvite <- nuview_lj_jobvite %>%
filter(is.na(jobvite_id)) %>%
distinct(Emp) %>%
left_join(nuview_data, by = "Emp")
View(nuview_not_jobvite)
max(jobvite_data$Candidate_Hire_Date)
jobvite_not_nuview <- jobvite_data %>% left_join(nuview_lj_jobvite) %>% filter(is.na(Emp))
jobvite_not_nuview <- jobvite_data %>% left_join(nuview_lj_jobvite, by = c("jobvite_id" = "Application_Id")) %>% filter(is.na(Emp))
jobvite_not_nuview <- jobvite_data %>% left_join(nuview_lj_jobvite, by = c("Application_Id" = "jobvite_id")) %>% filter(is.na(Emp))
View(jobvite_not_nuview)
nuview_lj_jobvite <- nuview_data %>%
mutate(PosEffDt = as.Date(PosEffDt, format = '%m/%d/%Y')) %>%
left_join(collapsed_nuview %>% select(jobvite_id, Pos), by = "Pos") %>%
left_join(jobvite_data, by = c("jobvite_id" = "Application_Id")) %>%
filter(PosEffDt >= min(jobvite_data$Candidate_Hire_Date))
View(nuview_lj_jobvite)
nuview_lj_jobvite <- nuview_data %>%
mutate(PosEffDt = as.Date(PosEffDt, format = '%m/%d/%Y')) %>%
left_join(collapsed_nuview %>% select(jobvite_id, Pos), by = "Pos") %>%
left_join(jobvite_data, by = c("jobvite_id" = "Application_Id"))
nuview_lj_jobvite <- nuview_data %>%
mutate(PosEffDt = as.Date(PosEffDt, format = '%m/%d/%Y')) %>%
left_join(collapsed_nuview %>% select(jobvite_id, Pos), by = "Pos") %>%
left_join(jobvite_data, by = c("jobvite_id" = "Application_Id")) %>%
filter(PosEffDt >= min(jobvite_data$Candidate_Hire_Date))
jobvite_not_nuview <- jobvite_data %>%
left_join(nuview_lj_jobvite, by = c("Application_Id" = "jobvite_id")) %>%
filter(is.na(Emp))
nuview_not_jobvite <- nuview_lj_jobvite %>%
filter(is.na(jobvite_id)) %>%
distinct(Emp) %>%
left_join(nuview_data, by = "Emp")
write_csv(nuview_lj_jobvite, "Output/nuview_lj_jobvite.csv")
write_csv(jobvite_not_nuview, "Output/jobvite_not_nuview.csv")
write_csv(nuview_not_jobvite, "Output/nuview_not_jobvite.csv")
library(h2o)
library(lime)
View(nuview_lj_jobvite)
joined_data <- nuview_lj_jobvite %>% filter(!is.na(jobvite_id))
source("Auxiliary/requirements.R")
joined_data <- nuview_lj_jobvite %>% filter(!is.na(jobvite_id))
View(jobvite_data)
View(joined_data)
View(nuview_lj_jobvite)
View(joined_data)
View(nuview_data)
source('Auxiliary/Requirements.R')
hr_data_raw <- read_excel('Data/WA_Fn-UseC_-HR-Employee-Attrition.xlsx')
hr_data_clean <- hr_data_raw %>%
mutate_if(is.character, as.factor) %>%
select(Attrition, everything())
?zip
"hi" %in% c("hi", "nope")
df_list <- list()
df_list[[1]] <-  crosscheck
df_list
names(df_list)
df_list <- list()
length(df_list)
df_list[[length(df_list)]]
df_list[[length(df_list)+1]] <-  crosscheck
names(df_list[[length(df_list)+1]]) <-  "crosscheck"
names(df_list[[length(df_list)]]) <-  "crosscheck"
names(df_list)
length(df_list)
names(df_list)[length(df_list)] <- "crosscheck"
names(df_list)
df_list[1]
?write.csv
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
print(c("1","2","3"))
"1" %in% c("1","2","3")
"2" %in% c("1","2","3")
runApp()
runApp()
df_list
df_list <- list()
df_list[[length(df_list+1)]] <- 1
runApp()
library(rtools)
shiny::runApp()
shell("zip")
shiny::runApp()
runApp()
rm(test)
rm(iter)
rm(df_list)
?zip
temp <- tempfile(fileext=".csv")
temp
runApp()
runApp()
runApp()
tempdir()
owd <- setwd(tempdir())
setwd(tempdir())
owd
?tempfile
runApp('~/Data Join Project')
?downloadHandler
runApp('~/Data Join Project')
runApp('~/Data Join Project')
runApp('~/Data Join Project')
runApp('~/Data Join Project')
runApp('~/Data Join Project')
runApp('~/Data Join Project')
runApp('~/Data Join Project')
runApp('~/Data Join Project')
shiny::runApp()
shiny::runApp()
shiny::runApp()
?names
View(jobvite_not_nuview)
names(jobvite_not_nuview)
test <- list(crosscheck, fulldata, jobvite_data)
names(test)
names(test)[1]
test[[1]]
names(test)[1] = "hi"
names(test)[1]
test[[1]]
?distinct
source("Auxiliary/requirements.R")
source("Auxiliary/functions.R")
###########Load, Check, Clean#########
jobvite_data <- read_csv(tk_choose.files(caption = "Select Jobvite Data in CSV format"))
nuview_data <- read_csv(tk_choose.files(caption = "Select NuView Data in CSV format"))
#duplicate check, change to datetime, collapse nuview, filter for recent dates
jobvite_data <- clean_jobvite(jobvite_data)
collapsed_nuview <- group_nuview(nuview_data, min(jobvite_data$Candidate_Hire_Date))
collapsed_nuview <- fill_nuview_collapsed(collapsed_nuview, jobvite_data)
nuview_lj_jobvite <- nuview_data %>%
mutate(PosEffDt = as.Date(PosEffDt, format = '%m/%d/%Y')) %>%
left_join(collapsed_nuview %>% select(jobvite_id, Pos), by = "Pos") %>%
left_join(jobvite_data, by = c("jobvite_id" = "Application_Id")) %>%
filter(PosEffDt >= min(jobvite_data$Candidate_Hire_Date))
nuview_not_jobvite <- nuview_lj_jobvite %>%
filter(is.na(jobvite_id)) %>%
distinct(Emp)
View(nuview_not_jobvite)
nuview_not_jobvite <- nuview_lj_jobvite %>%
filter(is.na(jobvite_id)) %>%
distinct(Emp) %>%
left_join(nuview_data, by = "Emp")
View(nuview_not_jobvite)
jobvite_not_nuview <- jobvite_data %>%
left_join(nuview_lj_jobvite, by = c("Application_Id" = "jobvite_id")) %>%
filter(is.na(Emp))
View(jobvite_not_nuview)
jobvite_not_nuview <- jobvite_data %>%
left_join(nuview_lj_jobvite, by = c("Application_Id" = "jobvite_id")) %>%
filter(is.na(Emp)) %>%
distinct(Application_Id) %>%
left_join(jobvite_data, by = "Application_Id")
View(jobvite_not_nuview)
shiny::runApp()
runApp()
setwd(tempdir())
getwd()
owd <- setwd(tempdir())
owd
runApp('~/Data Join Project')
?on.exit
Sys.getenv('R_USER')
dirname(sys.frame(1)$ofile)
source("app.R", chdir = T)
getwd()
getwd()
?write
?paste0
tempdir()
shiny::runApp()
runApp()
paste0("TMP = ", getwd()
)
write(paste0("TMP = 'C:/Users/interns/Documents/Temp'", file=file.path(Sys.getenv('R_USER'), '.Renviron'))
)
write("TMP = 'C:/Users/interns/Documents/Temp'", file=file.path(Sys.getenv('R_USER'), '.Renviron'))
tempdir()
set.tempdir(getwd())
library(unixtools)
?incProgress
interactive()
?interactive
?onaDownload
shiny::runApp()
